package com.qhjf.cfm.clients;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2018-10-15T23:47:28.426+08:00
 * Generated source version: 3.2.6
 *
 */
@WebServiceClient(name = "metlifeApplyPayService",
                  wsdlLocation = "file:webservice.wsdl",
                  targetNamespace = "www.seeyon.com")
public class MetlifeApplyPayService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("www.seeyon.com", "metlifeApplyPayService");
    public final static QName MetlifeApplyPayServiceHttpSoap11Endpoint = new QName("www.seeyon.com", "metlifeApplyPayServiceHttpSoap11Endpoint");
    public final static QName MetlifeApplyPayServiceHttpSoap12Endpoint = new QName("www.seeyon.com", "metlifeApplyPayServiceHttpSoap12Endpoint");
    public final static QName MetlifeApplyPayServiceHttpEndpoint = new QName("www.seeyon.com", "metlifeApplyPayServiceHttpEndpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:webservice.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MetlifeApplyPayService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:webservice.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public MetlifeApplyPayService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MetlifeApplyPayService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MetlifeApplyPayService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public MetlifeApplyPayService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public MetlifeApplyPayService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public MetlifeApplyPayService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns MetlifeApplyPayServicePortType
     */
    @WebEndpoint(name = "metlifeApplyPayServiceHttpSoap11Endpoint")
    public MetlifeApplyPayServicePortType getMetlifeApplyPayServiceHttpSoap11Endpoint() {
        return super.getPort(MetlifeApplyPayServiceHttpSoap11Endpoint, MetlifeApplyPayServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MetlifeApplyPayServicePortType
     */
    @WebEndpoint(name = "metlifeApplyPayServiceHttpSoap11Endpoint")
    public MetlifeApplyPayServicePortType getMetlifeApplyPayServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(MetlifeApplyPayServiceHttpSoap11Endpoint, MetlifeApplyPayServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns MetlifeApplyPayServicePortType
     */
    @WebEndpoint(name = "metlifeApplyPayServiceHttpSoap12Endpoint")
    public MetlifeApplyPayServicePortType getMetlifeApplyPayServiceHttpSoap12Endpoint() {
        return super.getPort(MetlifeApplyPayServiceHttpSoap12Endpoint, MetlifeApplyPayServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MetlifeApplyPayServicePortType
     */
    @WebEndpoint(name = "metlifeApplyPayServiceHttpSoap12Endpoint")
    public MetlifeApplyPayServicePortType getMetlifeApplyPayServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(MetlifeApplyPayServiceHttpSoap12Endpoint, MetlifeApplyPayServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns MetlifeApplyPayServicePortType
     */
    @WebEndpoint(name = "metlifeApplyPayServiceHttpEndpoint")
    public MetlifeApplyPayServicePortType getMetlifeApplyPayServiceHttpEndpoint() {
        return super.getPort(MetlifeApplyPayServiceHttpEndpoint, MetlifeApplyPayServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MetlifeApplyPayServicePortType
     */
    @WebEndpoint(name = "metlifeApplyPayServiceHttpEndpoint")
    public MetlifeApplyPayServicePortType getMetlifeApplyPayServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(MetlifeApplyPayServiceHttpEndpoint, MetlifeApplyPayServicePortType.class, features);
    }

}
