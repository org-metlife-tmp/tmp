
package com.qhjf.cfm.web.webservice.oa.client;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "OAServerService", targetNamespace = "http://server.oa.webservice.web.cfm.qhjf.com/")
public class OAServerService
    extends Service
{

    private static URL OASERVERSERVICE_WSDL_LOCATION;
    private static WebServiceException OASERVERSERVICE_EXCEPTION;
    private final static QName OASERVERSERVICE_QNAME = new QName("http://server.oa.webservice.web.cfm.qhjf.com/", "OAServerService");
    
    public OAServerService(String wsdl) throws MalformedURLException{
    	super(new URL(wsdl), OASERVERSERVICE_QNAME);
    }

    public OAServerService() {
        super(__getWsdlLocation(), OASERVERSERVICE_QNAME);
    }

    public OAServerService(WebServiceFeature... features) {
        super(__getWsdlLocation(), OASERVERSERVICE_QNAME, features);
    }

    public OAServerService(URL wsdlLocation) {
        super(wsdlLocation, OASERVERSERVICE_QNAME);
    }

    public OAServerService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, OASERVERSERVICE_QNAME, features);
    }

    public OAServerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OAServerService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns OAServer
     */
    @WebEndpoint(name = "OAServerPort")
    public OAServer getOAServerPort() {
        return super.getPort(new QName("http://server.oa.webservice.web.cfm.qhjf.com/", "OAServerPort"), OAServer.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OAServer
     */
    @WebEndpoint(name = "OAServerPort")
    public OAServer getOAServerPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://server.oa.webservice.web.cfm.qhjf.com/", "OAServerPort"), OAServer.class, features);
    }

    private static URL __getWsdlLocation() {
        if (OASERVERSERVICE_EXCEPTION!= null) {
            throw OASERVERSERVICE_EXCEPTION;
        }
        return OASERVERSERVICE_WSDL_LOCATION;
    }

}
